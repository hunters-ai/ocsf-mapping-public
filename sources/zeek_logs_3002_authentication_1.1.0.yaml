type: mapping
id: zeek_logs_3002_authentication_1.1.0
version: '1'
name: Zeek Logs to OCSF class Authentication
data-types:
- zeek-logs
mapping:
  fields:
    activity_id: (CASE WHEN RAW:request_type IS NULL THEN 0 WHEN RAW:request_type
      = 'AS'  THEN 3 WHEN RAW:request_type = 'TGS' THEN 4 ELSE 99 END)::NUMBER
    activity_name: (CASE (CASE WHEN RAW:request_type IS NULL THEN 0 WHEN RAW:request_type
      = 'AS'  THEN 3 WHEN RAW:request_type = 'TGS' THEN 4 ELSE 99 END::NUMBER) WHEN
      0 THEN 'Unknown' WHEN 1 THEN 'Logon' WHEN 2 THEN 'Logoff' WHEN 3 THEN 'Authentication
      Ticket' WHEN 4 THEN 'Service Ticket Request' WHEN 5 THEN 'Service Ticket Renew'
      WHEN 99 THEN 'Other' END)::VARCHAR
    actor: NULL::VARIANT
    api.service.name: (SERVICE)::VARCHAR
    auth_protocol: NULL::VARCHAR
    auth_protocol_id: NULL::NUMBER
    category_name: (CASE (3::NUMBER) WHEN 3 THEN 'Identity & Access Management' END)::VARCHAR
    category_uid: (3)::NUMBER
    certificate.subject: (RAW:client_cert_subject)::VARCHAR
    certificate.uid: (RAW:client_cert_fuid)::VARCHAR
    class_name: ('authentication')::VARCHAR
    class_uid: ('3002')::NUMBER
    cloud: NULL::VARIANT
    count: NULL::NUMBER
    device: NULL::VARIANT
    dst_endpoint.ip: (RESPONDER_HOST)::VARCHAR
    dst_endpoint.port: (RESPONDER_PORT)::NUMBER
    duration: NULL::NUMBER
    end_time: NULL::NUMBER
    end_time_dt: NULL::TIMESTAMP_LTZ
    enrichments: NULL::ARRAY
    http_request: NULL::VARIANT
    is_cleartext: NULL::BOOLEAN
    is_mfa: NULL::BOOLEAN
    is_new_logon: NULL::BOOLEAN
    is_remote: NULL::BOOLEAN
    logon_process: NULL::VARIANT
    logon_type: NULL::VARCHAR
    logon_type_id: NULL::NUMBER
    message: NULL::VARCHAR
    metadata.event_code: (log_type)::VARCHAR
    metadata.processed_time: (date_part('epoch_milliseconds', metadata$insertion_time::TIMESTAMP_LTZ))::NUMBER
    metadata.processed_time_dt: (metadata$insertion_time)::TIMESTAMP_LTZ
    metadata.product.name: ('zeek-logs')::VARCHAR
    metadata.product.vendor_name: ('zeek')::VARCHAR
    metadata.profiles: (ARRAY_CONSTRUCT('cloud','datetime','host','container','linux/linux_users'))::ARRAY
    metadata.uid: (metadata$uuid)::VARCHAR
    metadata.version: ('1.1.0')::VARCHAR
    metadata.loggers: ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('version', metadata$dataflow_id))
    metadata.extensions: ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('name', 'windows',
      'version', '2', 'uid', '1.1.0'))
    observables:
    - name: '''dst_endpoint.ip'''
      type: '''IP Address'''
      type_id: 2
      reputation: null::VARIANT
      value: (RESPONDER_HOST)::VARCHAR
    - name: '''src_endpoint.ip'''
      type: '''IP Address'''
      type_id: 2
      reputation: null::VARIANT
      value: (ORIGINATOR_HOST)::VARCHAR
    - name: '''user'''
      type: '''User'''
      type_id: 21
      reputation: null::VARIANT
      value: null::VARCHAR
    raw_data: NULL::VARCHAR
    service.name: (SERVICE)::VARCHAR
    session.expiration_time: (date_part('epoch_milliseconds', RAW:till::TIMESTAMP_LTZ))::NUMBER
    session.expiration_time_dt: (RAW:till)::TIMESTAMP_LTZ
    severity: (CASE (0::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Informational'
      WHEN 2 THEN 'Low' WHEN 3 THEN 'Medium' WHEN 4 THEN 'High' WHEN 5 THEN 'Critical'
      WHEN 6 THEN 'Fatal' WHEN 99 THEN 'Other' END)::VARCHAR
    severity_id: (0)::NUMBER
    src_endpoint.ip: (ORIGINATOR_HOST)::VARCHAR
    src_endpoint.port: (ORIGINATOR_PORT)::NUMBER
    start_time: NULL::NUMBER
    start_time_dt: NULL::TIMESTAMP_LTZ
    status: (CASE ((CASE WHEN RAW:success IS NULL THEN 0 WHEN RAW:success = TRUE THEN
      1 WHEN RAW:success = FALSE THEN 2 ELSE 99 END)::NUMBER) WHEN 0 THEN 'Unknown'
      WHEN 1 THEN 'Success' WHEN 2 THEN 'Failure' WHEN 99 THEN 'Other' END)::VARCHAR
    status_code: NULL::VARCHAR
    status_detail: (RAW:error_msg)::VARCHAR
    status_id: (CASE WHEN RAW:success IS NULL THEN 0 WHEN RAW:success = TRUE THEN
      1 WHEN RAW:success = FALSE THEN 2 ELSE 99 END)::NUMBER
    time: (date_part('epoch_milliseconds', timestamp::TIMESTAMP_LTZ))::NUMBER
    time_dt: (timestamp)::TIMESTAMP_LTZ
    timezone_offset: NULL::NUMBER
    type_name: '(CASE ((300200 + (CASE WHEN RAW:request_type IS NULL THEN 0 WHEN RAW:request_type
      = ''AS''  THEN 3 WHEN RAW:request_type = ''TGS'' THEN 4 ELSE 99 END))::NUMBER)
      WHEN 300200 THEN ''Authentication: Unknown'' WHEN 300201 THEN ''Authentication:
      Logon'' WHEN 300202 THEN ''Authentication: Logoff'' WHEN 300203 THEN ''Authentication:
      Authentication Ticket'' WHEN 300204 THEN ''Authentication: Service Ticket Request''
      WHEN 300205 THEN ''Authentication: Service Ticket Renew'' WHEN 300299 THEN ''Authentication:
      Other'' END)::VARCHAR'
    type_uid: (300200 + (CASE WHEN RAW:request_type IS NULL THEN 0 WHEN RAW:request_type
      = 'AS'  THEN 3 WHEN RAW:request_type = 'TGS' THEN 4 ELSE 99 END))::NUMBER
    unmapped: NULL::VARIANT
    user.domain: (RAW:client)::VARCHAR
  predicate: log_type = 'kerberos.log'
