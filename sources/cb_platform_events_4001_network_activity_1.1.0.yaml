type: mapping
id: cb_platform_events_4001_network_activity_1.1.0
version: '16'
name: Cb Platform Events to OCSF class Network Activity
data-types:
- cb-platform-events
mapping:
  fields:
    action: (CASE ((CASE WHEN SENSOR_ACTION = 'ACTION_ALLOW' THEN 1 WHEN SENSOR_ACTION
      = 'ACTION_BLOCK' THEN 2 WHEN SENSOR_ACTION is NULL THEN 0 ELSE 99 END)::NUMBER)
      WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Allowed' WHEN 2 THEN 'Denied' WHEN 99 THEN
      'Other' END)::VARCHAR
    action_id: (CASE WHEN SENSOR_ACTION = 'ACTION_ALLOW' THEN 1 WHEN SENSOR_ACTION
      = 'ACTION_BLOCK' THEN 2 WHEN SENSOR_ACTION is NULL THEN 0 ELSE 99 END)::NUMBER
    activity_id: (1)::NUMBER
    activity_name: (CASE ((1)::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Open' WHEN
      2 THEN 'Close' WHEN 3 THEN 'Reset' WHEN 4 THEN 'Fail' WHEN 5 THEN 'Refuse' WHEN
      6 THEN 'Traffic' WHEN 99 THEN 'Other' END)::VARCHAR
    actor.process.cmd_line: (PROCESS_CMDLINE)::VARCHAR
    actor.process.file.hashes: (ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('algorithm',
      CASE (CASE WHEN PROCESS_HASH_SHA256 IS NULL AND PROCESS_HASH_MD5 IS NULL THEN
      0 WHEN PROCESS_HASH_SHA256 IS NOT NULL THEN 3 WHEN PROCESS_HASH_MD5 IS NOT NULL
      THEN 1 END::NUMBER::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'MD5' WHEN 2 THEN
      'SHA-1' WHEN 3 THEN 'SHA-256' WHEN 4 THEN 'SHA-512' WHEN 5 THEN 'CTPH' WHEN
      6 THEN 'TLSH' WHEN 7 THEN 'quickXorHash' WHEN 99 THEN 'Other' END, 'algorithm_id',
      CASE WHEN PROCESS_HASH_SHA256 IS NULL AND PROCESS_HASH_MD5 IS NULL THEN 0 WHEN
      PROCESS_HASH_SHA256 IS NOT NULL THEN 3 WHEN PROCESS_HASH_MD5 IS NOT NULL THEN
      1 END::NUMBER::NUMBER, 'value', COALESCE(PROCESS_HASH_SHA256, PROCESS_HASH_MD5)::VARCHAR)))::ARRAY
    actor.process.file.path: (PROCESS_PATH)::VARCHAR
    actor.process.parent_process.cmd_line: (PARENT_CMDLINE)::VARCHAR
    actor.process.parent_process.file.hashes: (ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('algorithm',
      CASE (CASE WHEN PARENT_HASH_SHA256 IS NULL AND PARENT_HASH_MD5 IS NULL THEN
      0 WHEN PARENT_HASH_SHA256 IS NOT NULL THEN 3 WHEN PARENT_HASH_MD5 IS NOT NULL
      THEN 1 END::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'MD5' WHEN 2 THEN 'SHA-1'
      WHEN 3 THEN 'SHA-256' WHEN 4 THEN 'SHA-512' WHEN 5 THEN 'CTPH' WHEN 6 THEN 'TLSH'
      WHEN 7 THEN 'quickXorHash' WHEN 99 THEN 'Other' END, 'algorithm_id', CASE WHEN
      PARENT_HASH_SHA256 IS NULL AND PARENT_HASH_MD5 IS NULL THEN 0 WHEN PARENT_HASH_SHA256
      IS NOT NULL THEN 3 WHEN PARENT_HASH_MD5 IS NOT NULL THEN 1 END::NUMBER, 'value',
      COALESCE(PARENT_HASH_SHA256, PARENT_HASH_MD5)::VARCHAR)))::ARRAY
    actor.process.parent_process.file.path: (PARENT_PATH)::VARCHAR
    actor.process.parent_process.pid: (PARENT_PID)::NUMBER
    actor.process.parent_process.uid: (PARENT_GUID)::VARCHAR
    actor.process.pid: (PROCESS_PID)::NUMBER
    actor.process.uid: (PROCESS_GUID)::VARCHAR
    actor.process.user.name: (PROCESS_USERNAME)::VARCHAR
    api: NULL::VARIANT
    app_name: NULL::VARCHAR
    attacks: NULL::ARRAY
    authorizations: NULL::ARRAY
    category_name: (CASE ((4)::NUMBER) WHEN 4 THEN 'Network Activity' END)::VARCHAR
    category_uid: (4)::NUMBER
    class_name: ('network_activity')::VARCHAR
    class_uid: ('4001')::NUMBER
    cloud: NULL::VARIANT
    connection_info.direction: (CASE ((IFF(NETCONN_INBOUND = 'True', 1 , 0))::NUMBER)
      WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Inbound' WHEN 2 THEN 'Outbound' WHEN 3 THEN
      'Lateral' WHEN 99 THEN 'Other' END)::VARCHAR
    connection_info.direction_id: (IFF(NETCONN_INBOUND = 'True', 1 , 0))::NUMBER
    connection_info.protocol_name: (CASE WHEN NETCONN_PROTOCOL = 'PROTO_ICMP' THEN
      'icmp' WHEN NETCONN_PROTOCOL = 'PROTO_TCP' THEN 'tcp' WHEN NETCONN_PROTOCOL
      = 'PROTO_UDP' THEN 'udp' ELSE NULL END)::VARCHAR
    connection_info.protocol_num: (CASE WHEN NETCONN_PROTOCOL = 'PROTO_ICMP' THEN
      1 WHEN NETCONN_PROTOCOL = 'PROTO_TCP' THEN 6 WHEN NETCONN_PROTOCOL = 'PROTO_UDP'
      THEN 17 ELSE NULL END)::NUMBER
    count: NULL::NUMBER
    device.first_seen_time: (date_part('epoch_milliseconds', (DEVICE_TIMESTAMP)::TIMESTAMP_LTZ))::NUMBER
    device.first_seen_time_dt: (DEVICE_TIMESTAMP)::TIMESTAMP_LTZ
    device.groups: (ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('name', DEVICE_GROUP::VARCHAR)))::ARRAY
    device.ip: (DEVICE_EXTERNAL_IP)::VARCHAR
    device.name: (DEVICE_NAME)::VARCHAR
    device.org.uid: (ORG_KEY)::VARCHAR
    device.os.name: (DEVICE_OS)::VARCHAR
    device.os.type: (CASE ((CASE WHEN DEVICE_OS ='WINDOWS' THEN 100 WHEN DEVICE_OS
      = 'LINUX' THEN 200 WHEN DEVICE_OS = 'MAC' THEN 300 WHEN DEVICE_OS is NULL THEN
      0 ELSE 99 END)::NUMBER) WHEN 0 THEN 'Unknown' WHEN 100 THEN 'Windows' WHEN 101
      THEN 'Windows Mobile' WHEN 200 THEN 'Linux' WHEN 201 THEN 'Android' WHEN 300
      THEN 'macOS' WHEN 301 THEN 'iOS' WHEN 302 THEN 'iPadOS' WHEN 400 THEN 'Solaris'
      WHEN 401 THEN 'AIX' WHEN 402 THEN 'HP-UX' WHEN 99 THEN 'Other' END)::VARCHAR
    device.os.type_id: (CASE WHEN DEVICE_OS ='WINDOWS' THEN 100 WHEN DEVICE_OS = 'LINUX'
      THEN 200 WHEN DEVICE_OS = 'MAC' THEN 300 WHEN DEVICE_OS is NULL THEN 0 ELSE
      99 END)::NUMBER
    device.uid: (DEVICE_ID)::VARCHAR
    disposition: NULL::VARCHAR
    disposition_id: NULL::NUMBER
    dst_endpoint.domain: (NETCONN_DOMAIN)::VARCHAR
    dst_endpoint.ip: (REMOTE_IP)::VARCHAR
    dst_endpoint.port: (REMOTE_PORT)::NUMBER
    duration: NULL::NUMBER
    end_time: NULL::NUMBER
    end_time_dt: NULL::TIMESTAMP_LTZ
    enrichments: NULL::VARIANT
    firewall_rule: NULL::VARIANT
    load_balancer: NULL::VARIANT
    malware: NULL::ARRAY
    message: (EVENT_DESCRIPTION)::VARCHAR
    metadata.event_code: (type)::VARCHAR
    metadata.extensions: ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('name', 'windows',
      'version', '2', 'uid', '1.1.0'))
    metadata.loggers: ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('version', metadata$dataflow_id))
    metadata.processed_time: (date_part('epoch_milliseconds', metadata$insertion_time::TIMESTAMP_LTZ))::NUMBER
    metadata.processed_time_dt: (metadata$insertion_time)::TIMESTAMP_LTZ
    metadata.product.name: ('cb-platform-events')::VARCHAR
    metadata.product.vendor_name: ('cb-defense')::VARCHAR
    metadata.profiles: (ARRAY_CONSTRUCT('cloud','datetime','host','network_proxy','security_control','load_balancer','container','linux/linux_users'))::ARRAY
    metadata.uid: (metadata$uuid)::VARCHAR
    metadata.version: ('1.1.0')::VARCHAR
    observables:
    - name: '''actor.process'''
      type: '''Process'''
      type_id: 25
      reputation: null::VARIANT
      value: null::VARCHAR
    - name: '''actor.process.file'''
      type: '''File'''
      type_id: 24
      reputation: null::VARIANT
      value: null::VARCHAR
    - name: '''actor.process.parent_process'''
      type: '''Process'''
      type_id: 25
      reputation: null::VARIANT
      value: null::VARCHAR
    - name: '''actor.process.parent_process.file'''
      type: '''File'''
      type_id: 24
      reputation: null::VARIANT
      value: null::VARCHAR
    - name: '''actor.process.user'''
      type: '''User'''
      type_id: 21
      reputation: null::VARIANT
      value: null::VARCHAR
    - name: '''actor.process.user.name'''
      type: '''User Name'''
      type_id: 4
      reputation: null::VARIANT
      value: (PROCESS_USERNAME)::VARCHAR
    - name: '''device'''
      type: '''Endpoint'''
      type_id: 20
      reputation: null::VARIANT
      value: null::VARCHAR
    - name: '''device.ip'''
      type: '''IP Address'''
      type_id: 2
      reputation: null::VARIANT
      value: (DEVICE_EXTERNAL_IP)::VARCHAR
    - name: '''dst_endpoint.ip'''
      type: '''IP Address'''
      type_id: 2
      reputation: null::VARIANT
      value: (REMOTE_IP)::VARCHAR
    - name: '''src_endpoint.ip'''
      type: '''IP Address'''
      type_id: 2
      reputation: null::VARIANT
      value: (LOCAL_IP)::VARCHAR
    proxy: NULL::VARIANT
    proxy_connection_info: NULL::VARIANT
    proxy_endpoint: NULL::VARIANT
    proxy_http_request: NULL::VARIANT
    proxy_http_response: NULL::VARIANT
    proxy_tls: NULL::VARIANT
    proxy_traffic: NULL::VARIANT
    raw_data: NULL::VARCHAR
    severity: (CASE ((0)::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Informational'
      WHEN 2 THEN 'Low' WHEN 3 THEN 'Medium' WHEN 4 THEN 'High' WHEN 5 THEN 'Critical'
      WHEN 6 THEN 'Fatal' WHEN 99 THEN 'Other' END)::VARCHAR
    severity_id: (0)::NUMBER
    src_endpoint.ip: (LOCAL_IP)::VARCHAR
    src_endpoint.port: (LOCAL_PORT)::NUMBER
    start_time: NULL::NUMBER
    start_time_dt: NULL::TIMESTAMP_LTZ
    status: NULL::VARCHAR
    status_code: NULL::VARCHAR
    status_detail: NULL::VARCHAR
    status_id: NULL::NUMBER
    time: (date_part('epoch_milliseconds', backend_timestamp::TIMESTAMP_LTZ))::NUMBER
    time_dt: (backend_timestamp)::TIMESTAMP_LTZ
    timezone_offset: NULL::NUMBER
    tls: NULL::VARIANT
    traffic: NULL::VARIANT
    type_name: '(CASE ((400101)::NUMBER) WHEN 400100 THEN ''Network Activity: Unknown''
      WHEN 400101 THEN ''Network Activity: Open'' WHEN 400102 THEN ''Network Activity:
      Close'' WHEN 400103 THEN ''Network Activity: Reset'' WHEN 400104 THEN ''Network
      Activity: Fail'' WHEN 400105 THEN ''Network Activity: Refuse'' WHEN 400106 THEN
      ''Network Activity: Traffic'' WHEN 400199 THEN ''Network Activity: Other'' END)::VARCHAR'
    type_uid: (400101)::NUMBER
    unmapped: NULL::VARIANT
    url: NULL::VARIANT
  predicate: TYPE IN ('endpoint.event.netconn', 'endpoint.event.netconn_proxy')
