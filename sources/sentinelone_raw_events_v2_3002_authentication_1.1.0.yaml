type: mapping
id: sentinelone_raw_events_v2_3002_authentication_1.1.0
version: '12'
name: Sentinelone Raw Events V2 to OCSF class Authentication
data-types:
- sentinelone-raw-events-v2
mapping:
  fields:
    activity_id: (IFF(EVENT_TYPE = 'Login', 1, 2))::NUMBER
    activity_name: (CASE ((IFF(EVENT_TYPE = 'Login', 1, 2))::NUMBER) WHEN 0 THEN 'Unknown'
      WHEN 1 THEN 'Logon' WHEN 2 THEN 'Logoff' WHEN 3 THEN 'Authentication Ticket'
      WHEN 4 THEN 'Service Ticket Request' WHEN 5 THEN 'Service Ticket Renew' WHEN
      99 THEN 'Other' END)::VARCHAR
    actor: NULL::VARIANT
    api: NULL::VARIANT
    auth_protocol: NULL::VARCHAR
    auth_protocol_id: NULL::NUMBER
    category_name: (CASE ((3)::NUMBER) WHEN 3 THEN 'Identity & Access Management'
      END)::VARCHAR
    category_uid: (3)::NUMBER
    certificate: NULL::VARIANT
    class_name: ('authentication')::VARCHAR
    class_uid: ('3002')::NUMBER
    cloud: NULL::VARIANT
    count: NULL::NUMBER
    device.hostname: (COMPUTER_NAME)::VARCHAR
    device.os.name: (OS_NAME)::VARCHAR
    device.os.type: (CASE ((CASE WHEN OS_FAMILY IS NULL THEN 0 WHEN OS_FAMILY = 'windows'
      THEN 100 WHEN OS_FAMILY = 'linux' THEN 200 ELSE 99 END)::NUMBER) WHEN 0 THEN
      'Unknown' WHEN 100 THEN 'Windows' WHEN 101 THEN 'Windows Mobile' WHEN 200 THEN
      'Linux' WHEN 201 THEN 'Android' WHEN 300 THEN 'macOS' WHEN 301 THEN 'iOS' WHEN
      302 THEN 'iPadOS' WHEN 400 THEN 'Solaris' WHEN 401 THEN 'AIX' WHEN 402 THEN
      'HP-UX' WHEN 99 THEN 'Other' END)::VARCHAR
    device.os.type_id: (CASE WHEN OS_FAMILY IS NULL THEN 0 WHEN OS_FAMILY = 'windows'
      THEN 100 WHEN OS_FAMILY = 'linux' THEN 200 ELSE 99 END)::NUMBER
    device.type: (CASE ((CASE GET(RAW, 'endpoint.type') WHEN 'server' THEN 1 WHEN
      'desktop' THEN 2 WHEN 'laptop' THEN 3 ELSE 99 END)::NUMBER) WHEN 0 THEN 'Unknown'
      WHEN 1 THEN 'Server' WHEN 10 THEN 'Switch' WHEN 11 THEN 'Hub' WHEN 2 THEN 'Desktop'
      WHEN 3 THEN 'Laptop' WHEN 4 THEN 'Tablet' WHEN 5 THEN 'Mobile' WHEN 6 THEN 'Virtual'
      WHEN 7 THEN 'IOT' WHEN 8 THEN 'Browser' WHEN 9 THEN 'Firewall' WHEN 99 THEN
      'Other' END)::VARCHAR
    device.type_id: (CASE GET(RAW, 'endpoint.type') WHEN 'server' THEN 1 WHEN 'desktop'
      THEN 2 WHEN 'laptop' THEN 3 ELSE 99 END)::NUMBER
    device.uid: (AGENT_UUID)::VARCHAR
    dst_endpoint.ip: (DST_IP_ADDRESS)::VARCHAR
    dst_endpoint.port: (DST_PORT_NUMBER)::NUMBER
    duration: NULL::NUMBER
    end_time: NULL::NUMBER
    end_time_dt: NULL::TIMESTAMP_LTZ
    enrichments: NULL::ARRAY
    http_request: NULL::VARIANT
    is_cleartext: NULL::BOOLEAN
    is_mfa: NULL::BOOLEAN
    is_new_logon: NULL::BOOLEAN
    is_remote: NULL::BOOLEAN
    logon_process.cmd_line: (SRC_PROCESS_CMDLINE)::VARCHAR
    logon_process.created_time: (date_part('epoch_milliseconds', (SRC_PROCESS_START_TIME)::TIMESTAMP_LTZ))::NUMBER
    logon_process.created_time_dt: (SRC_PROCESS_START_TIME)::TIMESTAMP_LTZ
    logon_process.file.company_name: (GET(RAW, 'src.process.publisher'))::VARCHAR
    logon_process.file.hashes: (ARRAY_DISTINCT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('algorithm',
      iff(SRC_PROCESS_IMAGE_SHA256 is NULL, 'Unknown', 'SHA-256'), 'algorithm_id',
      iff(SRC_PROCESS_IMAGE_SHA256 is NULL, 0, 3), 'value', SRC_PROCESS_IMAGE_SHA256),
      OBJECT_CONSTRUCT_KEEP_NULL('algorithm', iff(GET(RAW, 'src.process.image.md5')
      is NULL, 'Unknown', 'MD5'), 'algorithm_id', iff(GET(RAW, 'src.process.image.md5')
      is NULL, 0, 1), 'value', GET(RAW, 'src.process.image.md5')), OBJECT_CONSTRUCT_KEEP_NULL('algorithm',
      iff(GET(RAW, 'src.process.image.sha1') is NULL, 'Unknown', 'SHA-1'), 'algorithm_id',
      iff(GET(RAW, 'src.process.image.sha1') is NULL, 0, 2), 'value', GET(RAW, 'src.process.image.sha1')))))::ARRAY
    logon_process.file.path: (SRC_PROCESS_IMAGE_PATH)::VARCHAR
    logon_process.integrity: (CASE ((CASE WHEN GET(RAW, 'src.process.integrityLevel')
      ILIKE '%Unknown%' THEN 0 WHEN GET(RAW, 'src.process.integrityLevel') ILIKE '%Untrusted%'
      THEN 1 WHEN GET(RAW, 'src.process.integrityLevel') ILIKE '%Low%' THEN 2 WHEN
      GET(RAW, 'src.process.integrityLevel') ILIKE '%Medium%' THEN 3 WHEN GET(RAW,
      'src.process.integrityLevel') ILIKE '%High%' THEN 4 WHEN GET(RAW, 'src.process.integrityLevel')
      ILIKE '%System%' THEN 5 WHEN GET(RAW, 'src.process.integrityLevel') ILIKE '%Protected%'
      THEN 6 ELSE 99 END)::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Untrusted' WHEN
      2 THEN 'Low' WHEN 3 THEN 'Medium' WHEN 4 THEN 'High' WHEN 5 THEN 'System' WHEN
      6 THEN 'Protected' WHEN 99 THEN 'Other' END)::VARCHAR
    logon_process.integrity_id: (CASE WHEN GET(RAW, 'src.process.integrityLevel')
      ILIKE '%Unknown%' THEN 0 WHEN GET(RAW, 'src.process.integrityLevel') ILIKE '%Untrusted%'
      THEN 1 WHEN GET(RAW, 'src.process.integrityLevel') ILIKE '%Low%' THEN 2 WHEN
      GET(RAW, 'src.process.integrityLevel') ILIKE '%Medium%' THEN 3 WHEN GET(RAW,
      'src.process.integrityLevel') ILIKE '%High%' THEN 4 WHEN GET(RAW, 'src.process.integrityLevel')
      ILIKE '%System%' THEN 5 WHEN GET(RAW, 'src.process.integrityLevel') ILIKE '%Protected%'
      THEN 6 ELSE 99 END)::NUMBER
    logon_process.name: (SRC_PROCESS_NAME)::VARCHAR
    logon_process.parent_process.cmd_line: (SRC_PROCESS_PARENT_CMDLINE)::VARCHAR
    logon_process.parent_process.created_time: (date_part('epoch_milliseconds', (SRC_PROCESS_PARENT_START_TIME)::TIMESTAMP_LTZ))::NUMBER
    logon_process.parent_process.created_time_dt: (SRC_PROCESS_PARENT_START_TIME)::TIMESTAMP_LTZ
    logon_process.parent_process.file.company_name: (GET(RAW, 'src.process.parent.publisher'))::VARCHAR
    logon_process.parent_process.file.hashes: (ARRAY_DISTINCT(ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('algorithm',
      iff(SRC_PROCESS_PARENT_IMAGE_SHA256 is NULL, 'Unknown', 'SHA-256'), 'algorithm_id',
      iff(SRC_PROCESS_PARENT_IMAGE_SHA256 is NULL, 0, 3), 'value', SRC_PROCESS_PARENT_IMAGE_SHA256),
      OBJECT_CONSTRUCT_KEEP_NULL('algorithm', iff(GET(RAW, 'src.process.parent.image.md5')
      is NULL, 'Unknown', 'MD5'), 'algorithm_id', iff(GET(RAW, 'src.process.parent.image.md5')
      is NULL, 0, 1), 'value', GET(RAW, 'src.process.parent.image.md5')), OBJECT_CONSTRUCT_KEEP_NULL('algorithm',
      iff(GET(RAW, 'src.process.parent.image.sha1') is NULL, 'Unknown', 'SHA-1'),
      'algorithm_id', iff(GET(RAW, 'src.process.parent.image.sha1') is NULL, 0, 2),
      'value', GET(RAW, 'src.process.parent.image.sha1')))))::ARRAY
    logon_process.parent_process.file.path: (GET(RAW, 'src.process.parent.image.path'))::VARCHAR
    logon_process.parent_process.integrity: (CASE ((CASE WHEN GET(RAW, 'src.process.parent.integrityLevel')
      ILIKE '%Unknown%' THEN 0 WHEN GET(RAW, 'src.process.parent.integrityLevel')
      ILIKE '%Untrusted%' THEN 1 WHEN GET(RAW, 'src.process.parent.integrityLevel')
      ILIKE '%Low%' THEN 2 WHEN GET(RAW, 'src.process.parent.integrityLevel') ILIKE
      '%Medium%' THEN 3 WHEN GET(RAW, 'src.process.parent.integrityLevel') ILIKE '%High%'
      THEN 4 WHEN GET(RAW, 'src.process.parent.integrityLevel') ILIKE '%System%' THEN
      5 WHEN GET(RAW, 'src.process.parent.integrityLevel') ILIKE '%Protected%' THEN
      6 ELSE 99 END)::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Untrusted' WHEN 2
      THEN 'Low' WHEN 3 THEN 'Medium' WHEN 4 THEN 'High' WHEN 5 THEN 'System' WHEN
      6 THEN 'Protected' WHEN 99 THEN 'Other' END)::VARCHAR
    logon_process.parent_process.integrity_id: (CASE WHEN GET(RAW, 'src.process.parent.integrityLevel')
      ILIKE '%Unknown%' THEN 0 WHEN GET(RAW, 'src.process.parent.integrityLevel')
      ILIKE '%Untrusted%' THEN 1 WHEN GET(RAW, 'src.process.parent.integrityLevel')
      ILIKE '%Low%' THEN 2 WHEN GET(RAW, 'src.process.parent.integrityLevel') ILIKE
      '%Medium%' THEN 3 WHEN GET(RAW, 'src.process.parent.integrityLevel') ILIKE '%High%'
      THEN 4 WHEN GET(RAW, 'src.process.parent.integrityLevel') ILIKE '%System%' THEN
      5 WHEN GET(RAW, 'src.process.parent.integrityLevel') ILIKE '%Protected%' THEN
      6 ELSE 99 END)::NUMBER
    logon_process.parent_process.name: (SRC_PROCESS_PARENT_NAME)::VARCHAR
    logon_process.parent_process.pid: (SRC_PROCESS_PARENT_PID)::NUMBER
    logon_process.parent_process.session.uid: (GET(RAW, 'src.process.parent.sessionId'))::VARCHAR
    logon_process.parent_process.uid: (SRC_PROCESS_PARENT_UID)::VARCHAR
    logon_process.parent_process.user.name: (GET(RAW, 'src.process.parent.user'))::VARCHAR
    logon_process.pid: (SRC_PROCESS_PID)::NUMBER
    logon_process.session.uid: (GET(RAW, 'src.process.sessionId'))::VARCHAR
    logon_process.uid: (SRC_PROCESS_UID)::VARCHAR
    logon_process.user.name: (SRC_PROCESS_USER_NAME)::VARCHAR
    logon_type: (CASE ((CASE WHEN LOGON_TYPE = 'SYSTEM' THEN 0 WHEN LOGON_TYPE = 'INTERACTIVE'
      THEN 2 WHEN LOGON_TYPE = 'NETWORK' THEN 3 WHEN LOGON_TYPE = 'BATCH' THEN 4 WHEN
      LOGON_TYPE = 'SERVICE' THEN 5 WHEN LOGON_TYPE = 'UNLOCK' THEN 7 WHEN LOGON_TYPE
      = 'NETWORK_CLEAR_TEXT' THEN 8 WHEN LOGON_TYPE = 'REMOTE_INTERACTIVE' THEN 10
      WHEN LOGON_TYPE = 'CACHED_INTERACTIVE' THEN 11 WHEN LOGON_TYPE = 'CACHED_REMOTE_INTERACTIVE'
      THEN 12 ELSE 99 END)::NUMBER) WHEN 0 THEN 'System' WHEN 10 THEN 'Remote Interactive'
      WHEN 11 THEN 'Cached Interactive' WHEN 12 THEN 'Cached Remote Interactive' WHEN
      13 THEN 'Cached Unlock' WHEN 2 THEN 'Interactive' WHEN 3 THEN 'Network' WHEN
      4 THEN 'Batch' WHEN 5 THEN 'OS Service' WHEN 7 THEN 'Unlock' WHEN 8 THEN 'Network
      Cleartext' WHEN 9 THEN 'New Credentials' WHEN 99 THEN 'Other' END)::VARCHAR
    logon_type_id: (CASE WHEN LOGON_TYPE = 'SYSTEM' THEN 0 WHEN LOGON_TYPE = 'INTERACTIVE'
      THEN 2 WHEN LOGON_TYPE = 'NETWORK' THEN 3 WHEN LOGON_TYPE = 'BATCH' THEN 4 WHEN
      LOGON_TYPE = 'SERVICE' THEN 5 WHEN LOGON_TYPE = 'UNLOCK' THEN 7 WHEN LOGON_TYPE
      = 'NETWORK_CLEAR_TEXT' THEN 8 WHEN LOGON_TYPE = 'REMOTE_INTERACTIVE' THEN 10
      WHEN LOGON_TYPE = 'CACHED_INTERACTIVE' THEN 11 WHEN LOGON_TYPE = 'CACHED_REMOTE_INTERACTIVE'
      THEN 12 ELSE 99 END)::NUMBER
    message: NULL::VARCHAR
    metadata.event_code: (event_type)::VARCHAR
    metadata.extensions: ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('name', 'windows',
      'version', '2', 'uid', '1.1.0'))
    metadata.loggers: ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('version', metadata$dataflow_id))
    metadata.processed_time: (date_part('epoch_milliseconds', metadata$insertion_time::TIMESTAMP_LTZ))::NUMBER
    metadata.processed_time_dt: (metadata$insertion_time)::TIMESTAMP_LTZ
    metadata.product.name: ('sentinelone-raw-events-v2')::VARCHAR
    metadata.product.vendor_name: ('sentinelone')::VARCHAR
    metadata.profiles: (ARRAY_CONSTRUCT('cloud','datetime','host','container','linux/linux_users'))::ARRAY
    metadata.uid: (metadata$uuid)::VARCHAR
    metadata.version: ('1.1.0')::VARCHAR
    observables:
    - name: '''device'''
      type: '''Endpoint'''
      type_id: 20
      reputation: null::VARIANT
      value: null::VARCHAR
    - name: '''device.hostname'''
      type: '''Hostname'''
      type_id: 1
      reputation: null::VARIANT
      value: (COMPUTER_NAME)::VARCHAR
    - name: '''dst_endpoint.ip'''
      type: '''IP Address'''
      type_id: 2
      reputation: null::VARIANT
      value: (DST_IP_ADDRESS)::VARCHAR
    - name: '''logon_process.name'''
      type: '''Process Name'''
      type_id: 9
      reputation: null::VARIANT
      value: (SRC_PROCESS_NAME)::VARCHAR
    - name: '''logon_process.parent_process.name'''
      type: '''Process Name'''
      type_id: 9
      reputation: null::VARIANT
      value: (SRC_PROCESS_PARENT_NAME)::VARCHAR
    - name: '''logon_process.parent_process.user.name'''
      type: '''User Name'''
      type_id: 4
      reputation: null::VARIANT
      value: (GET(RAW, 'src.process.parent.user'))::VARCHAR
    - name: '''logon_process.user.name'''
      type: '''User Name'''
      type_id: 4
      reputation: null::VARIANT
      value: (SRC_PROCESS_USER_NAME)::VARCHAR
    - name: '''src_endpoint.ip'''
      type: '''IP Address'''
      type_id: 2
      reputation: null::VARIANT
      value: (RAW:"src.endpoint.ip.address")::VARCHAR
    - name: '''user'''
      type: '''User'''
      type_id: 21
      reputation: null::VARIANT
      value: null::VARCHAR
    - name: '''user.name'''
      type: '''User Name'''
      type_id: 4
      reputation: null::VARIANT
      value: (LOGIN_USER_NAME)::VARCHAR
    raw_data: NULL::VARCHAR
    service: NULL::VARIANT
    session.uid: (GET(RAW, 'event.login.sessionId'))::VARCHAR
    severity: (CASE ((0)::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Informational'
      WHEN 2 THEN 'Low' WHEN 3 THEN 'Medium' WHEN 4 THEN 'High' WHEN 5 THEN 'Critical'
      WHEN 6 THEN 'Fatal' WHEN 99 THEN 'Other' END)::VARCHAR
    severity_id: (0)::NUMBER
    src_endpoint.ip: (RAW:"src.endpoint.ip.address")::VARCHAR
    src_endpoint.port: (SRC_PORT_NUMBER)::NUMBER
    start_time: NULL::NUMBER
    start_time_dt: NULL::TIMESTAMP_LTZ
    status: (CASE ((CASE WHEN GET(RAW, 'event.login.loginIsSuccessful') IS NULL THEN
      0 WHEN GET(RAW, 'event.login.loginIsSuccessful') = TRUE THEN 1 WHEN GET(RAW,
      'event.login.loginIsSuccessful') = FALSE THEN 2 ELSE 99 END)::NUMBER) WHEN 0
      THEN 'Unknown' WHEN 1 THEN 'Success' WHEN 2 THEN 'Failure' WHEN 99 THEN 'Other'
      END)::VARCHAR
    status_code: NULL::VARCHAR
    status_detail: (GET(RAW, 'event.login.failureReason'))::VARCHAR
    status_id: (CASE WHEN GET(RAW, 'event.login.loginIsSuccessful') IS NULL THEN 0
      WHEN GET(RAW, 'event.login.loginIsSuccessful') = TRUE THEN 1 WHEN GET(RAW, 'event.login.loginIsSuccessful')
      = FALSE THEN 2 ELSE 99 END)::NUMBER
    time: (date_part('epoch_milliseconds', timestamp::TIMESTAMP_LTZ))::NUMBER
    time_dt: (timestamp)::TIMESTAMP_LTZ
    timezone_offset: NULL::NUMBER
    type_name: '(CASE ((IFF(EVENT_TYPE = ''Login'', 300201, 300202))::NUMBER) WHEN
      300200 THEN ''Authentication: Unknown'' WHEN 300201 THEN ''Authentication: Logon''
      WHEN 300202 THEN ''Authentication: Logoff'' WHEN 300203 THEN ''Authentication:
      Authentication Ticket'' WHEN 300204 THEN ''Authentication: Service Ticket Request''
      WHEN 300205 THEN ''Authentication: Service Ticket Renew'' WHEN 300299 THEN ''Authentication:
      Other'' END)::VARCHAR'
    type_uid: (IFF(EVENT_TYPE = 'Login', 300201, 300202))::NUMBER
    unmapped: NULL::VARIANT
    user.account.name: (GET(RAW, 'event.login.accountName'))::VARCHAR
    user.account.uid: (GET(RAW, 'account.id'))::VARCHAR
    user.groups: (ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('uid', GET(RAW, 'group.id'))))::ARRAY
    user.name: (LOGIN_USER_NAME)::VARCHAR
    user.type: (CASE ((CASE WHEN GET(RAW, 'event.login.isAdministratorEquivalent')
      IS NULL THEN 0 WHEN GET(RAW, 'event.login.isAdministratorEquivalent') = 'true'
      THEN 2 ELSE 99 END)::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'User' WHEN 2
      THEN 'Admin' WHEN 3 THEN 'System' WHEN 99 THEN 'Other' END)::VARCHAR
    user.type_id: (CASE WHEN GET(RAW, 'event.login.isAdministratorEquivalent') IS
      NULL THEN 0 WHEN GET(RAW, 'event.login.isAdministratorEquivalent') = 'true'
      THEN 2 ELSE 99 END)::NUMBER
    user.uid: (LOGIN_USER_SID)::VARCHAR
  predicate: EVENT_TYPE IN ('Login', 'Logout')
