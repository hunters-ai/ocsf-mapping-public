type: mapping
id: vectra_audit_logs_3002_authentication_1.1.0
version: '1'
name: Vectra Audit Logs to OCSF class Authentication
data-types:
- vectra-audit-logs
mapping:
  fields:
    activity_id: (CASE WHEN EVENT_ACTION = 'login' THEN 1 WHEN EVENT_ACTION = 'logout'
      THEN 2 WHEN EVENT_ACTION IS NULL THEN 0 ELSE 99 END)::NUMBER
    activity_name: (CASE ((CASE WHEN EVENT_ACTION = 'login' THEN 1 WHEN EVENT_ACTION
      = 'logout' THEN 2 WHEN EVENT_ACTION IS NULL THEN 0 ELSE 99 END)::NUMBER) WHEN
      0 THEN 'Unknown' WHEN 1 THEN 'Logon' WHEN 2 THEN 'Logoff' WHEN 3 THEN 'Authentication
      Ticket' WHEN 4 THEN 'Service Ticket Request' WHEN 5 THEN 'Service Ticket Renew'
      WHEN 99 THEN 'Other' END)::VARCHAR
    actor: NULL::VARIANT
    api: NULL::VARIANT
    auth_protocol: NULL::VARCHAR
    auth_protocol_id: NULL::NUMBER
    category_name: (CASE ((3)::NUMBER) WHEN 3 THEN 'Identity & Access Management'
      END)::VARCHAR
    category_uid: (3)::NUMBER
    certificate: NULL::VARIANT
    class_name: ('authentication')::VARCHAR
    class_uid: ('3002')::NUMBER
    cloud.provider: ('Vectra')::VARCHAR
    count: NULL::NUMBER
    device: NULL::VARIANT
    dst_endpoint: NULL::VARIANT
    duration: NULL::NUMBER
    end_time: NULL::NUMBER
    end_time_dt: NULL::TIMESTAMP_LTZ
    enrichments: NULL::ARRAY
    http_request: NULL::VARIANT
    is_cleartext: NULL::BOOLEAN
    is_mfa: NULL::BOOLEAN
    is_new_logon: NULL::BOOLEAN
    is_remote: NULL::BOOLEAN
    logon_process: NULL::VARIANT
    logon_type: (CASE ((3)::NUMBER) WHEN 0 THEN 'System' WHEN 10 THEN 'Remote Interactive'
      WHEN 11 THEN 'Cached Interactive' WHEN 12 THEN 'Cached Remote Interactive' WHEN
      13 THEN 'Cached Unlock' WHEN 2 THEN 'Interactive' WHEN 3 THEN 'Network' WHEN
      4 THEN 'Batch' WHEN 5 THEN 'OS Service' WHEN 7 THEN 'Unlock' WHEN 8 THEN 'Network
      Cleartext' WHEN 9 THEN 'New Credentials' WHEN 99 THEN 'Other' END)::VARCHAR
    logon_type_id: (3)::NUMBER
    message: (MESSAGE)::VARCHAR
    metadata.extensions: ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('name', 'windows',
      'version', '2', 'uid', '1.1.0'))
    metadata.loggers: ARRAY_CONSTRUCT(OBJECT_CONSTRUCT_KEEP_NULL('version', metadata$dataflow_id))
    metadata.processed_time: (date_part('epoch_milliseconds', metadata$insertion_time::TIMESTAMP_LTZ))::NUMBER
    metadata.processed_time_dt: (metadata$insertion_time)::TIMESTAMP_LTZ
    metadata.product.name: ('vectra-audit-logs')::VARCHAR
    metadata.product.vendor_name: ('vectra')::VARCHAR
    metadata.profiles: (ARRAY_CONSTRUCT('cloud','datetime','host','container','linux/linux_users'))::ARRAY
    metadata.uid: (metadata$uuid)::VARCHAR
    metadata.version: ('1.1.0')::VARCHAR
    observables:
    - name: '''src_endpoint.ip'''
      type: '''IP Address'''
      type_id: 2
      reputation: null::VARIANT
      value: (SOURCE_IP)::VARCHAR
    - name: '''user'''
      type: '''User'''
      type_id: 21
      reputation: null::VARIANT
      value: null::VARCHAR
    - name: '''user.email_addr'''
      type: '''Email Address'''
      type_id: 5
      reputation: null::VARIANT
      value: (USERNAME)::VARCHAR
    raw_data: NULL::VARCHAR
    service: NULL::VARIANT
    session: NULL::VARIANT
    severity: (CASE ((0)::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Informational'
      WHEN 2 THEN 'Low' WHEN 3 THEN 'Medium' WHEN 4 THEN 'High' WHEN 5 THEN 'Critical'
      WHEN 6 THEN 'Fatal' WHEN 99 THEN 'Other' END)::VARCHAR
    severity_id: (0)::NUMBER
    src_endpoint.ip: (SOURCE_IP)::VARCHAR
    start_time: NULL::NUMBER
    start_time_dt: NULL::TIMESTAMP_LTZ
    status: (CASE ((CASE WHEN message ILIKE '%%Failed%%' THEN 2 WHEN message IS NULL
      THEN 0 ELSE 1 END)::NUMBER) WHEN 0 THEN 'Unknown' WHEN 1 THEN 'Success' WHEN
      2 THEN 'Failure' WHEN 99 THEN 'Other' END)::VARCHAR
    status_code: NULL::VARCHAR
    status_detail: NULL::VARCHAR
    status_id: (CASE WHEN message ILIKE '%%Failed%%' THEN 2 WHEN message IS NULL THEN
      0 ELSE 1 END)::NUMBER
    time: (date_part('epoch_milliseconds', event_time::TIMESTAMP_LTZ))::NUMBER
    time_dt: (event_time)::TIMESTAMP_LTZ
    timezone_offset: NULL::NUMBER
    type_name: '(CASE ((CASE WHEN EVENT_ACTION = ''login'' THEN 300201 WHEN EVENT_ACTION
      = ''logout'' THEN 300202 WHEN EVENT_ACTION IS NULL THEN 300200 ELSE 300299 END)::NUMBER)
      WHEN 300200 THEN ''Authentication: Unknown'' WHEN 300201 THEN ''Authentication:
      Logon'' WHEN 300202 THEN ''Authentication: Logoff'' WHEN 300203 THEN ''Authentication:
      Authentication Ticket'' WHEN 300204 THEN ''Authentication: Service Ticket Request''
      WHEN 300205 THEN ''Authentication: Service Ticket Renew'' WHEN 300299 THEN ''Authentication:
      Other'' END)::VARCHAR'
    type_uid: (CASE WHEN EVENT_ACTION = 'login' THEN 300201 WHEN EVENT_ACTION = 'logout'
      THEN 300202 WHEN EVENT_ACTION IS NULL THEN 300200 ELSE 300299 END)::NUMBER
    unmapped: NULL::VARIANT
    user.email_addr: (USERNAME)::VARCHAR
    user.uid: (COALESCE(USER_ID, EVENT_DATA:user))::VARCHAR
  predicate: EVENT_ACTION IN ('login', 'logout')
